{"ast":null,"code":"import { REQUEST_TYPES_COIN, RECEIVE_TYPES_COIN_FAILURE, RECEIVE_TYPES_COIN_SUCESS, SET_EMAIL, REQUEST_EXPENSES, SET_TOTAL_VALUE, DELETE_EXPENSE, DECREASE_VALUE, EDIT_EXPENSE } from './actionTypes';\nimport fetchApi from '../../services/fetchApi'; // MOEDAS (REQ-3):\n\nconst requestTypesCoin = () => ({\n  type: REQUEST_TYPES_COIN\n});\n\nconst result = money => {\n  const coinsKeys = Object.keys(money);\n  const filteredCoins = coinsKeys.filter(coin => coin !== 'USDT' ? coin : '');\n  return filteredCoins;\n};\n\nconst deleteUSDT = money => delete money.USDT;\n\nconst receiveTypeCoinSucess = coins => ({\n  type: RECEIVE_TYPES_COIN_SUCESS,\n  currencies: result(coins),\n  exchangeRates: deleteUSDT(coins)\n});\n\nconst receiveTypeCoinFailure = error => ({\n  type: RECEIVE_TYPES_COIN_FAILURE,\n  error\n});\n\nexport const fetchTypesCoin = () => async dispatch => {\n  dispatch(requestTypesCoin());\n\n  try {\n    const coins = await fetchApi();\n    dispatch(receiveTypeCoinSucess(coins));\n  } catch (error) {\n    dispatch(receiveTypeCoinFailure(error));\n  }\n}; // EXPENSES:\n\nexport const fetchExpenses = payload => ({\n  type: REQUEST_EXPENSES,\n  payload\n}); // OUTRAS:\n\nexport const setTotalValue = payload => ({\n  type: SET_TOTAL_VALUE,\n  payload\n});\nexport function saveEmail(email) {\n  return {\n    type: SET_EMAIL,\n    email\n  };\n}\nexport const deleteExpense = payload => ({\n  type: DELETE_EXPENSE,\n  payload\n});\nexport const decreaseValue = payload => ({\n  type: DECREASE_VALUE,\n  payload\n});\nexport const editExpense = payload => ({\n  type: EDIT_EXPENSE,\n  payload\n});","map":{"version":3,"names":["REQUEST_TYPES_COIN","RECEIVE_TYPES_COIN_FAILURE","RECEIVE_TYPES_COIN_SUCESS","SET_EMAIL","REQUEST_EXPENSES","SET_TOTAL_VALUE","DELETE_EXPENSE","DECREASE_VALUE","EDIT_EXPENSE","fetchApi","requestTypesCoin","type","result","money","coinsKeys","Object","keys","filteredCoins","filter","coin","deleteUSDT","USDT","receiveTypeCoinSucess","coins","currencies","exchangeRates","receiveTypeCoinFailure","error","fetchTypesCoin","dispatch","fetchExpenses","payload","setTotalValue","saveEmail","email","deleteExpense","decreaseValue","editExpense"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["import { REQUEST_TYPES_COIN,\n  RECEIVE_TYPES_COIN_FAILURE,\n  RECEIVE_TYPES_COIN_SUCESS,\n  SET_EMAIL,\n  REQUEST_EXPENSES,\n  SET_TOTAL_VALUE,\n  DELETE_EXPENSE,\n  DECREASE_VALUE,\n  EDIT_EXPENSE,\n} from './actionTypes';\nimport fetchApi from '../../services/fetchApi';\n\n// MOEDAS (REQ-3):\n\nconst requestTypesCoin = () => ({\n  type: REQUEST_TYPES_COIN,\n});\n\nconst result = (money) => {\n  const coinsKeys = Object.keys(money);\n  const filteredCoins = coinsKeys.filter((coin) => (coin !== 'USDT'\n    ? coin : ''));\n  return filteredCoins;\n};\n\nconst deleteUSDT = (money) => delete money.USDT;\n\nconst receiveTypeCoinSucess = (coins) => ({\n  type: RECEIVE_TYPES_COIN_SUCESS,\n  currencies: result(coins),\n  exchangeRates: deleteUSDT(coins),\n});\n\nconst receiveTypeCoinFailure = (error) => ({\n  type: RECEIVE_TYPES_COIN_FAILURE,\n  error,\n});\n\nexport const fetchTypesCoin = () => async (dispatch) => {\n  dispatch(requestTypesCoin());\n\n  try {\n    const coins = await fetchApi();\n    dispatch(receiveTypeCoinSucess(coins));\n  } catch (error) {\n    dispatch(receiveTypeCoinFailure(error));\n  }\n};\n\n// EXPENSES:\n\nexport const fetchExpenses = (payload) => ({\n  type: REQUEST_EXPENSES,\n  payload,\n});\n\n// OUTRAS:\n\nexport const setTotalValue = (payload) => ({\n  type: SET_TOTAL_VALUE,\n  payload,\n});\n\nexport function saveEmail(email) {\n  return {\n    type: SET_EMAIL,\n    email,\n  };\n}\n\nexport const deleteExpense = (payload) => ({\n  type: DELETE_EXPENSE,\n  payload,\n});\n\nexport const decreaseValue = (payload) => ({\n  type: DECREASE_VALUE,\n  payload,\n});\n\nexport const editExpense = (payload) => ({\n  type: EDIT_EXPENSE,\n  payload,\n});\n"],"mappings":"AAAA,SAASA,kBAAT,EACEC,0BADF,EAEEC,yBAFF,EAGEC,SAHF,EAIEC,gBAJF,EAKEC,eALF,EAMEC,cANF,EAOEC,cAPF,EAQEC,YARF,QASO,eATP;AAUA,OAAOC,QAAP,MAAqB,yBAArB,C,CAEA;;AAEA,MAAMC,gBAAgB,GAAG,OAAO;EAC9BC,IAAI,EAAEX;AADwB,CAAP,CAAzB;;AAIA,MAAMY,MAAM,GAAIC,KAAD,IAAW;EACxB,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAlB;EACA,MAAMI,aAAa,GAAGH,SAAS,CAACI,MAAV,CAAkBC,IAAD,IAAWA,IAAI,KAAK,MAAT,GAC9CA,IAD8C,GACvC,EADW,CAAtB;EAEA,OAAOF,aAAP;AACD,CALD;;AAOA,MAAMG,UAAU,GAAIP,KAAD,IAAW,OAAOA,KAAK,CAACQ,IAA3C;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,KAAY;EACxCZ,IAAI,EAAET,yBADkC;EAExCsB,UAAU,EAAEZ,MAAM,CAACW,KAAD,CAFsB;EAGxCE,aAAa,EAAEL,UAAU,CAACG,KAAD;AAHe,CAAZ,CAA9B;;AAMA,MAAMG,sBAAsB,GAAIC,KAAD,KAAY;EACzChB,IAAI,EAAEV,0BADmC;EAEzC0B;AAFyC,CAAZ,CAA/B;;AAKA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACtDA,QAAQ,CAACnB,gBAAgB,EAAjB,CAAR;;EAEA,IAAI;IACF,MAAMa,KAAK,GAAG,MAAMd,QAAQ,EAA5B;IACAoB,QAAQ,CAACP,qBAAqB,CAACC,KAAD,CAAtB,CAAR;EACD,CAHD,CAGE,OAAOI,KAAP,EAAc;IACdE,QAAQ,CAACH,sBAAsB,CAACC,KAAD,CAAvB,CAAR;EACD;AACF,CATM,C,CAWP;;AAEA,OAAO,MAAMG,aAAa,GAAIC,OAAD,KAAc;EACzCpB,IAAI,EAAEP,gBADmC;EAEzC2B;AAFyC,CAAd,CAAtB,C,CAKP;;AAEA,OAAO,MAAMC,aAAa,GAAID,OAAD,KAAc;EACzCpB,IAAI,EAAEN,eADmC;EAEzC0B;AAFyC,CAAd,CAAtB;AAKP,OAAO,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;EAC/B,OAAO;IACLvB,IAAI,EAAER,SADD;IAEL+B;EAFK,CAAP;AAID;AAED,OAAO,MAAMC,aAAa,GAAIJ,OAAD,KAAc;EACzCpB,IAAI,EAAEL,cADmC;EAEzCyB;AAFyC,CAAd,CAAtB;AAKP,OAAO,MAAMK,aAAa,GAAIL,OAAD,KAAc;EACzCpB,IAAI,EAAEJ,cADmC;EAEzCwB;AAFyC,CAAd,CAAtB;AAKP,OAAO,MAAMM,WAAW,GAAIN,OAAD,KAAc;EACvCpB,IAAI,EAAEH,YADiC;EAEvCuB;AAFuC,CAAd,CAApB"},"metadata":{},"sourceType":"module"}