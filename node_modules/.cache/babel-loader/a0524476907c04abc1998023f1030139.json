{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documentos/projects-turma23/sd-023-b-project-trybewallet/src/components/WalletForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../mainStyle.css';\nimport { fetchTypesCoin } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WalletForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: 0,\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name\n      } = target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClick = () => {\n      const {\n        dispatch\n      } = this.props;\n      const api = dispatch(fetchExpenses());\n      console.log(api);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(fetchTypesCoin());\n  }\n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      currencies\n    } = this.props;\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"value\",\n        type: \"number\",\n        \"data-testid\": \"value-input\",\n        onChange: this.handleChange,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"description\",\n        type: \"text\",\n        \"data-testid\": \"description-input\",\n        onChange: this.handleChange,\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"currency\",\n          \"data-testid\": \"currency-input\",\n          id: \"currency\",\n          onChange: this.handleChange,\n          value: currency,\n          children: currencies.map((coin, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"currency\",\n            value: coin,\n            children: coin\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pay-method\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"method\",\n          \"data-testid\": \"method-input\",\n          id: \"pay-method\",\n          onChange: this.handleChange,\n          value: method,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"pay-method\",\n            value: \"Dinheiro\",\n            children: \"Dinheiro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"pay-method\",\n            value: \"Cart\\xE3o de cr\\xE9dito\",\n            children: \"Cart\\xE3o de cr\\xE9dito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"pay-method\",\n            value: \"Cart\\xE3o de d\\xE9bito\",\n            children: \"Cart\\xE3o de d\\xE9bito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tag\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"tag\",\n          id: \"tag\",\n          \"data-testid\": \"tag-input\",\n          onChange: this.handleChange,\n          value: tag,\n          children: tags.map(tagValue => /*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"tag\",\n            value: tagValue,\n            children: tagValue\n          }, tagValue, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {},\n        children: \"Adicionar despesa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  currencies: store.wallet.currencies\n});\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.shape({\n    map: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default connect(mapStateToProps)(WalletForm);","map":{"version":3,"names":["React","Component","connect","PropTypes","fetchTypesCoin","WalletForm","state","id","value","description","currency","method","tag","handleChange","target","name","type","checked","setState","handleClick","dispatch","props","api","fetchExpenses","console","log","componentDidMount","render","currencies","tags","map","coin","index","tagValue","mapStateToProps","store","wallet","propTypes","func","isRequired","shape"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-trybewallet/src/components/WalletForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../mainStyle.css';\nimport { fetchTypesCoin } from '../redux/actions';\n\nclass WalletForm extends Component {\n  state = {\n    id: 0,\n    value: 0,\n    description: '',\n    currency: 'USD',\n    method: 'Dinheiro',\n    tag: 'Alimentação',\n  };\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchTypesCoin());\n  }\n\n  handleChange = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleClick = () => {\n    const { dispatch } = this.props;\n    \n    const api = dispatch(fetchExpenses());\n    console.log(api);\n\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { currencies } = this.props;\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    return (\n      <div className=\"main\">\n        <input\n          name=\"value\"\n          type=\"number\"\n          data-testid=\"value-input\"\n          onChange={ this.handleChange }\n          value={ value }\n        />\n        <input\n          name=\"description\"\n          type=\"text\"\n          data-testid=\"description-input\"\n          onChange={ this.handleChange }\n          value={ description }\n        />\n\n        <label htmlFor=\"currency\">\n          <select\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            id=\"currency\"\n            onChange={ this.handleChange }\n            value={ currency }\n          >\n            { currencies.map((coin, index) => (\n              <option\n                id=\"currency\"\n                key={ index }\n                value={ coin }\n              >\n                { coin }\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"pay-method\">\n          <select\n            name=\"method\"\n            data-testid=\"method-input\"\n            id=\"pay-method\"\n            onChange={ this.handleChange }\n            value={ method }\n          >\n            <option\n              id=\"pay-method\"\n              value=\"Dinheiro\"\n            >\n              Dinheiro\n            </option>\n            <option\n              id=\"pay-method\"\n              value=\"Cartão de crédito\"\n            >\n              Cartão de crédito\n            </option>\n            <option\n              id=\"pay-method\"\n              value=\"Cartão de débito\"\n            >\n              Cartão de débito\n            </option>\n          </select>\n        </label>\n\n        <label htmlFor=\"tag\">\n          <select\n            name=\"tag\"\n            id=\"tag\"\n            data-testid=\"tag-input\"\n            onChange={ this.handleChange }\n            value={ tag }\n          >\n            { tags.map((tagValue) => (\n              <option\n                id=\"tag\"\n                key={ tagValue }\n                value={ tagValue }\n              >\n                { tagValue }\n              </option>\n            ))}\n          </select>\n        </label>\n        <button\n          type=\"button\"\n          onClick={ () => {} }\n        >\n          Adicionar despesa\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  currencies: store.wallet.currencies,\n});\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.shape({\n    map: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(WalletForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}