{"ast":null,"code":"import { REQUEST_TYPES_COIN, RECEIVE_TYPES_COIN_FAILURE, RECEIVE_TYPES_COIN_SUCESS, SET_EMAIL } from './actionTypes';\nimport fetchApi from '../../services/fetchApi';\n\nconst requestTypesCoin = () => ({\n  type: REQUEST_TYPES_COIN\n});\n\nconst result = async () => {\n  const coins = await fetchApi();\n  const coinsKeys = Object.keys(coins);\n  const filteredCoins = coinsKeys.filter(coin => coin !== 'USDT' ? coin : '');\n};\n\nconst receiveTypeCoinSucess = coins => ({\n  type: RECEIVE_TYPES_COIN_SUCESS,\n  coins\n});\n\nconst receiveTypeCoinFailure = error => ({\n  type: RECEIVE_TYPES_COIN_FAILURE,\n  error\n});\n\nexport const fetchTypesCoin = () => async dispatch => {\n  dispatch(requestTypesCoin());\n\n  try {\n    const coins = await fetchApi();\n    const coinsKeys = Object.keys(coins);\n    const filteredCoins = coinsKeys.filter(coin => coin !== 'USDT' ? coin : '');\n    dispatch(receiveTypeCoinSucess(coins));\n  } catch (error) {\n    dispatch(receiveTypeCoinFailure(error));\n  }\n};\nexport function saveEmail(email) {\n  return {\n    type: SET_EMAIL,\n    email\n  };\n}","map":{"version":3,"names":["REQUEST_TYPES_COIN","RECEIVE_TYPES_COIN_FAILURE","RECEIVE_TYPES_COIN_SUCESS","SET_EMAIL","fetchApi","requestTypesCoin","type","result","coins","coinsKeys","Object","keys","filteredCoins","filter","coin","receiveTypeCoinSucess","receiveTypeCoinFailure","error","fetchTypesCoin","dispatch","saveEmail","email"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["import { REQUEST_TYPES_COIN,\n  RECEIVE_TYPES_COIN_FAILURE,\n  RECEIVE_TYPES_COIN_SUCESS,\n  SET_EMAIL } from './actionTypes';\nimport fetchApi from '../../services/fetchApi';\n\nconst requestTypesCoin = () => ({\n  type: REQUEST_TYPES_COIN,\n});\n\nconst result = async () => {\n  const coins = await fetchApi();\n  const coinsKeys = Object.keys(coins);\n  const filteredCoins = coinsKeys.filter((coin) => (coin !== 'USDT'\n    ? coin : ''));\n}\nconst receiveTypeCoinSucess = (coins) => ({\n  type: RECEIVE_TYPES_COIN_SUCESS,\n  coins,\n});\n\nconst receiveTypeCoinFailure = (error) => ({\n  type: RECEIVE_TYPES_COIN_FAILURE,\n  error,\n});\n\nexport const fetchTypesCoin = () => async (dispatch) => {\n  dispatch(requestTypesCoin());\n\n  try {\n    const coins = await fetchApi();\n    const coinsKeys = Object.keys(coins);\n    const filteredCoins = coinsKeys.filter((coin) => (coin !== 'USDT'\n      ? coin : ''));\n    dispatch(receiveTypeCoinSucess(coins));\n  } catch (error) {\n    dispatch(receiveTypeCoinFailure(error));\n  }\n};\n\nexport function saveEmail(email) {\n  return {\n    type: SET_EMAIL,\n    email,\n  };\n}\n"],"mappings":"AAAA,SAASA,kBAAT,EACEC,0BADF,EAEEC,yBAFF,EAGEC,SAHF,QAGmB,eAHnB;AAIA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,gBAAgB,GAAG,OAAO;EAC9BC,IAAI,EAAEN;AADwB,CAAP,CAAzB;;AAIA,MAAMO,MAAM,GAAG,YAAY;EACzB,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,EAA5B;EACA,MAAMK,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAlB;EACA,MAAMI,aAAa,GAAGH,SAAS,CAACI,MAAV,CAAkBC,IAAD,IAAWA,IAAI,KAAK,MAAT,GAC9CA,IAD8C,GACvC,EADW,CAAtB;AAED,CALD;;AAMA,MAAMC,qBAAqB,GAAIP,KAAD,KAAY;EACxCF,IAAI,EAAEJ,yBADkC;EAExCM;AAFwC,CAAZ,CAA9B;;AAKA,MAAMQ,sBAAsB,GAAIC,KAAD,KAAY;EACzCX,IAAI,EAAEL,0BADmC;EAEzCgB;AAFyC,CAAZ,CAA/B;;AAKA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACtDA,QAAQ,CAACd,gBAAgB,EAAjB,CAAR;;EAEA,IAAI;IACF,MAAMG,KAAK,GAAG,MAAMJ,QAAQ,EAA5B;IACA,MAAMK,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAlB;IACA,MAAMI,aAAa,GAAGH,SAAS,CAACI,MAAV,CAAkBC,IAAD,IAAWA,IAAI,KAAK,MAAT,GAC9CA,IAD8C,GACvC,EADW,CAAtB;IAEAK,QAAQ,CAACJ,qBAAqB,CAACP,KAAD,CAAtB,CAAR;EACD,CAND,CAME,OAAOS,KAAP,EAAc;IACdE,QAAQ,CAACH,sBAAsB,CAACC,KAAD,CAAvB,CAAR;EACD;AACF,CAZM;AAcP,OAAO,SAASG,SAAT,CAAmBC,KAAnB,EAA0B;EAC/B,OAAO;IACLf,IAAI,EAAEH,SADD;IAELkB;EAFK,CAAP;AAID"},"metadata":{},"sourceType":"module"}