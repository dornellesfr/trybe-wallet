{"ast":null,"code":"import { REQUEST_TYPES_COIN, RECEIVE_TYPES_COIN_FAILURE, RECEIVE_TYPES_COIN_SUCESS, REQUEST_EXPENSES, SET_TOTAL_VALUE } from '../actions/actionTypes';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n  isFetching: false,\n  error: '',\n  totalValue: 0\n};\nconst e = Number(state.totalValue) + Number(action.payload);\n\nconst walletReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_TYPES_COIN:\n      return { ...state,\n        isFetching: true\n      };\n\n    case RECEIVE_TYPES_COIN_FAILURE:\n      return { ...state,\n        error: action.error,\n        isFetching: false\n      };\n\n    case RECEIVE_TYPES_COIN_SUCESS:\n      return { ...state,\n        currencies: action.currencies,\n        isFetching: false\n      };\n\n    case REQUEST_EXPENSES:\n      return { ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n\n    case SET_TOTAL_VALUE:\n      return { ...state,\n        totalValue: e.t\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default walletReducer;","map":{"version":3,"names":["REQUEST_TYPES_COIN","RECEIVE_TYPES_COIN_FAILURE","RECEIVE_TYPES_COIN_SUCESS","REQUEST_EXPENSES","SET_TOTAL_VALUE","INITIAL_STATE","currencies","expenses","editor","idToEdit","isFetching","error","totalValue","e","Number","state","action","payload","walletReducer","type","t"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["import { REQUEST_TYPES_COIN,\n  RECEIVE_TYPES_COIN_FAILURE,\n  RECEIVE_TYPES_COIN_SUCESS,\n  REQUEST_EXPENSES,\n  SET_TOTAL_VALUE,\n} from '../actions/actionTypes';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n  isFetching: false,\n  error: '',\n  totalValue: 0,\n};\n\nconst e = Number(state.totalValue) + Number(action.payload);\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_TYPES_COIN:\n    return {\n      ...state,\n      isFetching: true,\n    };\n  case RECEIVE_TYPES_COIN_FAILURE:\n    return {\n      ...state,\n      error: action.error,\n      isFetching: false,\n    };\n  case RECEIVE_TYPES_COIN_SUCESS:\n    return {\n      ...state,\n      currencies: action.currencies,\n      isFetching: false,\n    };\n  case REQUEST_EXPENSES:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload],\n    };\n  case SET_TOTAL_VALUE:\n    return {\n      ...state,\n      totalValue: e.t,\n    };\n  default: return state;\n  }\n};\n\nexport default walletReducer;\n"],"mappings":"AAAA,SAASA,kBAAT,EACEC,0BADF,EAEEC,yBAFF,EAGEC,gBAHF,EAIEC,eAJF,QAKO,wBALP;AAOA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,QAAQ,EAAE,EAFU;EAGpBC,MAAM,EAAE,KAHY;EAIpBC,QAAQ,EAAE,CAJU;EAKpBC,UAAU,EAAE,KALQ;EAMpBC,KAAK,EAAE,EANa;EAOpBC,UAAU,EAAE;AAPQ,CAAtB;AAUA,MAAMC,CAAC,GAAGC,MAAM,CAACC,KAAK,CAACH,UAAP,CAAN,GAA2BE,MAAM,CAACE,MAAM,CAACC,OAAR,CAA3C;;AAEA,MAAMC,aAAa,GAAG,YAAmC;EAAA,IAAlCH,KAAkC,uEAA1BV,aAA0B;EAAA,IAAXW,MAAW;;EACvD,QAAQA,MAAM,CAACG,IAAf;IACA,KAAKnB,kBAAL;MACE,OAAO,EACL,GAAGe,KADE;QAELL,UAAU,EAAE;MAFP,CAAP;;IAIF,KAAKT,0BAAL;MACE,OAAO,EACL,GAAGc,KADE;QAELJ,KAAK,EAAEK,MAAM,CAACL,KAFT;QAGLD,UAAU,EAAE;MAHP,CAAP;;IAKF,KAAKR,yBAAL;MACE,OAAO,EACL,GAAGa,KADE;QAELT,UAAU,EAAEU,MAAM,CAACV,UAFd;QAGLI,UAAU,EAAE;MAHP,CAAP;;IAKF,KAAKP,gBAAL;MACE,OAAO,EACL,GAAGY,KADE;QAELR,QAAQ,EAAE,CAAC,GAAGQ,KAAK,CAACR,QAAV,EAAoBS,MAAM,CAACC,OAA3B;MAFL,CAAP;;IAIF,KAAKb,eAAL;MACE,OAAO,EACL,GAAGW,KADE;QAELH,UAAU,EAAEC,CAAC,CAACO;MAFT,CAAP;;IAIF;MAAS,OAAOL,KAAP;EA5BT;AA8BD,CA/BD;;AAiCA,eAAeG,aAAf"},"metadata":{},"sourceType":"module"}