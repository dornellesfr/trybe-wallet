{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documentos/projects-turma23/sd-023-b-project-trybewallet/src/components/WalletForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../mainStyle.css';\nimport { fetchExpenses, fetchTypesCoin, setTotalValue } from '../redux/actions';\nimport fetchApi from '../services/fetchApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alimentacao = 'Alimentação';\n\nclass WalletForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: Alimentacao\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name\n      } = target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClickAdd = async () => {\n      const {\n        dispatch\n      } = this.props;\n      const exchangeRates = await fetchApi();\n      delete exchangeRates.USDT;\n      const {\n        id,\n        value,\n        description,\n        currency,\n        method,\n        tag\n      } = this.state;\n      this.setState({\n        id: id + 1\n      });\n      dispatch(fetchExpenses({\n        id,\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates\n      }));\n      const sum = parseFloat(value * exchangeRates[currency].ask).toFixed(2);\n      dispatch(setTotalValue(sum));\n      this.setState({\n        value: '',\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: Alimentacao\n      });\n    };\n\n    this.handleClickEdit = () => {\n      const {\n        idToEdit,\n        expenses\n      } = this.props;\n      const expToEdit = expenses.find(expense => Number(expense.id) === Number(idToEdit));\n      console.log(expToEdit);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(fetchTypesCoin());\n  }\n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      currencies,\n      editor\n    } = this.props;\n    const tags = [Alimentacao, 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\n    const buttonAddExpense = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: this.handleClickAdd,\n      children: \"Adicionar despesa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n\n    const buttonEditExpense = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: this.handleClickEdit,\n      children: \"Editar despesa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"value\",\n        type: \"number\",\n        \"data-testid\": \"value-input\",\n        onChange: this.handleChange,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"description\",\n        type: \"text\",\n        \"data-testid\": \"description-input\",\n        onChange: this.handleChange,\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"currency\",\n          \"data-testid\": \"currency-input\",\n          id: \"currency\",\n          onChange: this.handleChange,\n          value: currency,\n          children: currencies.map((coin, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"currency\",\n            value: coin,\n            children: coin\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pay-method\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"method\",\n          \"data-testid\": \"method-input\",\n          id: \"pay-method\",\n          onChange: this.handleChange,\n          value: method,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"pay-method\",\n            value: \"Dinheiro\",\n            children: \"Dinheiro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"pay-method\",\n            value: \"Cart\\xE3o de cr\\xE9dito\",\n            children: \"Cart\\xE3o de cr\\xE9dito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"pay-method\",\n            value: \"Cart\\xE3o de d\\xE9bito\",\n            children: \"Cart\\xE3o de d\\xE9bito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tag\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"tag\",\n          id: \"tag\",\n          \"data-testid\": \"tag-input\",\n          onChange: this.handleChange,\n          value: tag,\n          children: tags.map(tagValue => /*#__PURE__*/_jsxDEV(\"option\", {\n            id: \"tag\",\n            value: tagValue,\n            children: tagValue\n          }, tagValue, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), // botão de adicionar / editar despesa.\n      editor ? buttonEditExpense : buttonAddExpense]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  currencies: store.wallet.currencies,\n  editor: store.wallet.editor,\n  expenses: store.wallet.expenses\n});\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(String).isRequired,\n  editor: PropTypes.bool.isRequired,\n  expenses: PropTypes.arrayOf(String).isRequired,\n  idToEdit: PropTypes.number.isRequired\n};\nexport default connect(mapStateToProps)(WalletForm);","map":{"version":3,"names":["React","Component","connect","PropTypes","fetchExpenses","fetchTypesCoin","setTotalValue","fetchApi","Alimentacao","WalletForm","state","id","value","description","currency","method","tag","handleChange","target","name","type","checked","setState","handleClickAdd","dispatch","props","exchangeRates","USDT","sum","parseFloat","ask","toFixed","handleClickEdit","idToEdit","expenses","expToEdit","find","expense","Number","console","log","componentDidMount","render","currencies","editor","tags","buttonAddExpense","buttonEditExpense","map","coin","index","tagValue","mapStateToProps","store","wallet","propTypes","func","isRequired","arrayOf","String","bool","number"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-trybewallet/src/components/WalletForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../mainStyle.css';\nimport { fetchExpenses, fetchTypesCoin, setTotalValue } from '../redux/actions';\nimport fetchApi from '../services/fetchApi';\n\nconst Alimentacao = 'Alimentação';\n\nclass WalletForm extends Component {\n  state = {\n    id: 0,\n    value: '',\n    description: '',\n    currency: 'USD',\n    method: 'Dinheiro',\n    tag: Alimentacao,\n  };\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchTypesCoin());\n  }\n\n  handleChange = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleClickAdd = async () => {\n    const { dispatch } = this.props;\n    const exchangeRates = await fetchApi();\n    delete exchangeRates.USDT;\n    const { id, value, description, currency, method, tag } = this.state;\n    this.setState({\n      id: id + 1,\n    });\n    dispatch(fetchExpenses({\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates,\n    }));\n\n    const sum = parseFloat(value * exchangeRates[currency].ask).toFixed(2);\n\n    dispatch(setTotalValue(sum));\n    this.setState({\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: Alimentacao,\n    });\n  };\n\n  handleClickEdit = () => {\n    const { idToEdit, expenses } = this.props;\n    const expToEdit = expenses.find((expense) => Number(expense.id) === Number(idToEdit));\n    console.log(expToEdit);\n  };\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { currencies, editor } = this.props;\n    const tags = [Alimentacao, 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\n    const buttonAddExpense = (\n      <button\n        type=\"button\"\n        onClick={ this.handleClickAdd }\n      >\n        Adicionar despesa\n      </button>\n    );\n    const buttonEditExpense = (\n      <button\n        type=\"button\"\n        onClick={ this.handleClickEdit }\n      >\n        Editar despesa\n      </button>\n    );\n    return (\n      <div className=\"main\">\n        <input\n          name=\"value\"\n          type=\"number\"\n          data-testid=\"value-input\"\n          onChange={ this.handleChange }\n          value={ value }\n        />\n        <input\n          name=\"description\"\n          type=\"text\"\n          data-testid=\"description-input\"\n          onChange={ this.handleChange }\n          value={ description }\n        />\n\n        <label htmlFor=\"currency\">\n          <select\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            id=\"currency\"\n            onChange={ this.handleChange }\n            value={ currency }\n          >\n            { currencies.map((coin, index) => (\n              <option\n                id=\"currency\"\n                key={ index }\n                value={ coin }\n              >\n                { coin }\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"pay-method\">\n          <select\n            name=\"method\"\n            data-testid=\"method-input\"\n            id=\"pay-method\"\n            onChange={ this.handleChange }\n            value={ method }\n          >\n            <option\n              id=\"pay-method\"\n              value=\"Dinheiro\"\n            >\n              Dinheiro\n            </option>\n            <option\n              id=\"pay-method\"\n              value=\"Cartão de crédito\"\n            >\n              Cartão de crédito\n            </option>\n            <option\n              id=\"pay-method\"\n              value=\"Cartão de débito\"\n            >\n              Cartão de débito\n            </option>\n          </select>\n        </label>\n\n        <label htmlFor=\"tag\">\n          <select\n            name=\"tag\"\n            id=\"tag\"\n            data-testid=\"tag-input\"\n            onChange={ this.handleChange }\n            value={ tag }\n          >\n            { tags.map((tagValue) => (\n              <option\n                id=\"tag\"\n                key={ tagValue }\n                value={ tagValue }\n              >\n                { tagValue }\n              </option>\n            ))}\n          </select>\n        </label>\n        {\n        // botão de adicionar / editar despesa.\n          editor ? buttonEditExpense : buttonAddExpense\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  currencies: store.wallet.currencies,\n  editor: store.wallet.editor,\n  expenses: store.wallet.expenses,\n});\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(String).isRequired,\n  editor: PropTypes.bool.isRequired,\n  expenses: PropTypes.arrayOf(String).isRequired,\n  idToEdit: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps)(WalletForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}