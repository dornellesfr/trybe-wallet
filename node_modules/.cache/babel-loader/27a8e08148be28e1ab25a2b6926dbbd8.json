{"ast":null,"code":"import { REQUEST_TYPES_COIN, RECEIVE_TYPES_COIN_FAILURE, RECEIVE_TYPES_COIN_SUCESS, SET_EMAIL, SET_CURRENCIES } from './actionTypes';\nimport fetchApi from '../../services/fetchApi';\n\nconst requestTypesCoin = () => ({\n  type: REQUEST_TYPES_COIN\n});\n\nconst receiveTypeCoinSucess = coins => ({\n  type: RECEIVE_TYPES_COIN_SUCESS,\n  coins\n});\n\nconst receiveTypeCoinFailure = error => ({\n  type: RECEIVE_TYPES_COIN_FAILURE,\n  error\n});\n\nexport const fetchTypesCoin = () => async dispatch => {\n  dispatch(requestTypesCoin());\n\n  try {\n    const response = await fetchApi();\n    const coins = await fetchApi();\n    const coinsKeys = Object.keys(coins);\n    const filteredCoins = coinsKeys.filter(coin => coin !== 'USDT' ? coin : '');\n    dispatch(receiveTypeCoinSucess(response));\n  } catch (error) {}\n};\nexport function saveEmail(email) {\n  return {\n    type: SET_EMAIL,\n    email\n  };\n}\nexport function setCurrencies(coins) {\n  return {\n    type: SET_CURRENCIES,\n    coins\n  };\n}","map":{"version":3,"names":["REQUEST_TYPES_COIN","RECEIVE_TYPES_COIN_FAILURE","RECEIVE_TYPES_COIN_SUCESS","SET_EMAIL","SET_CURRENCIES","fetchApi","requestTypesCoin","type","receiveTypeCoinSucess","coins","receiveTypeCoinFailure","error","fetchTypesCoin","dispatch","response","coinsKeys","Object","keys","filteredCoins","filter","coin","saveEmail","email","setCurrencies"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["import { REQUEST_TYPES_COIN,\n  RECEIVE_TYPES_COIN_FAILURE,\n  RECEIVE_TYPES_COIN_SUCESS,\n  SET_EMAIL, SET_CURRENCIES } from './actionTypes';\nimport fetchApi from '../../services/fetchApi';\n\nconst requestTypesCoin = () => ({\n  type: REQUEST_TYPES_COIN,\n});\n\nconst receiveTypeCoinSucess = (coins) => ({\n  type: RECEIVE_TYPES_COIN_SUCESS,\n  coins,\n});\n\nconst receiveTypeCoinFailure = (error) => ({\n  type: RECEIVE_TYPES_COIN_FAILURE,\n  error,\n});\n\nexport const fetchTypesCoin = () => async (dispatch) => {\n  dispatch(requestTypesCoin());\n\n  try {\n    const response = await fetchApi();\n    const coins = await fetchApi();\n    const coinsKeys = Object.keys(coins);\n    const filteredCoins = coinsKeys.filter((coin) => (coin !== 'USDT'\n      ? coin : ''));\n    dispatch(receiveTypeCoinSucess(response));\n  } catch (error) {\n\n  }\n\n};\n\nexport function saveEmail(email) {\n  return {\n    type: SET_EMAIL,\n    email,\n  };\n}\n\nexport function setCurrencies(coins) {\n  return {\n    type: SET_CURRENCIES,\n    coins,\n  };\n}\n"],"mappings":"AAAA,SAASA,kBAAT,EACEC,0BADF,EAEEC,yBAFF,EAGEC,SAHF,EAGaC,cAHb,QAGmC,eAHnC;AAIA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,gBAAgB,GAAG,OAAO;EAC9BC,IAAI,EAAEP;AADwB,CAAP,CAAzB;;AAIA,MAAMQ,qBAAqB,GAAIC,KAAD,KAAY;EACxCF,IAAI,EAAEL,yBADkC;EAExCO;AAFwC,CAAZ,CAA9B;;AAKA,MAAMC,sBAAsB,GAAIC,KAAD,KAAY;EACzCJ,IAAI,EAAEN,0BADmC;EAEzCU;AAFyC,CAAZ,CAA/B;;AAKA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACtDA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;;EAEA,IAAI;IACF,MAAMQ,QAAQ,GAAG,MAAMT,QAAQ,EAA/B;IACA,MAAMI,KAAK,GAAG,MAAMJ,QAAQ,EAA5B;IACA,MAAMU,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,CAAlB;IACA,MAAMS,aAAa,GAAGH,SAAS,CAACI,MAAV,CAAkBC,IAAD,IAAWA,IAAI,KAAK,MAAT,GAC9CA,IAD8C,GACvC,EADW,CAAtB;IAEAP,QAAQ,CAACL,qBAAqB,CAACM,QAAD,CAAtB,CAAR;EACD,CAPD,CAOE,OAAOH,KAAP,EAAc,CAEf;AAEF,CAdM;AAgBP,OAAO,SAASU,SAAT,CAAmBC,KAAnB,EAA0B;EAC/B,OAAO;IACLf,IAAI,EAAEJ,SADD;IAELmB;EAFK,CAAP;AAID;AAED,OAAO,SAASC,aAAT,CAAuBd,KAAvB,EAA8B;EACnC,OAAO;IACLF,IAAI,EAAEH,cADD;IAELK;EAFK,CAAP;AAID"},"metadata":{},"sourceType":"module"}